@page "/Weather"
@attribute [Authorize]
@inject ApiService api

<div class="flex-col">
    <h1>Weather</h1>
    <h3>Only Authorized</h3>
    <p>This page will only work if you are authenticated.</p>

    <div class="flex">
        <a class="link" href=".">Goto Homepage</a>
        <button @onclick="Logout">Logout</button>
    </div>
    <p>You will see forecasts only if you are in <b>admin</b> role.</p>
    <div class="flex">
        <button @onclick="GetForecasts">Get Forecasts (User Role)</button>
        <button @onclick="GetForecastsAdmin">Get Forecasts (Admin Role)</button>
    </div>
    @if (forecasts is not null && message is null)
    {
        <table>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp C</th>
                    <th>Temp F</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var fc in forecasts)
                {
                    <tr>
                        <td>@fc.Date</td>
                        <td>@fc.TemperatureC</td>
                        <td>@fc.TemperatureF</td>
                        <td>@fc.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <p style="color: red">@message</p>
</div>

@code
{
    WeatherForecastDto[]? forecasts;
    string? message;

    private async Task Logout()
    {
        await api.Logout();
    }

    private async Task GetForecasts()
    {
        message = null;
        forecasts = null;
        var forecastResult = await api.ExecuteAsync<WeatherForecastDto[]>(
            $"{ApiService.API_URL}/weather", HttpMethod.Get);
        if (forecastResult.IsSuccess) forecasts = forecastResult.Value;
        else
        {
            message = forecastResult.Message;
        }
    }

    private async Task GetForecastsAdmin()
    {
        message = null;
        forecasts = null;
        var forecastResult = await api.ExecuteAsync<WeatherForecastDto[]>(
            $"{ApiService.API_URL}/weather/admin", HttpMethod.Get);
        if (forecastResult.IsSuccess) forecasts = forecastResult.Value;
        else
        {
            message = forecastResult.Message;
        }
    }

}
