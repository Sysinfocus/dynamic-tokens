@page "/Login"
@attribute [AllowAnonymous]
@inject AuthenticationStateProvider asp
@inject HttpClient httpClient
@inject NavigationManager nm

<div class="container">
    <div class="flex-col">
        <h1>Login</h1>
        <p>Username</p>
        <input @bind="@request.Username" />
        <p>Password</p>
        <input type="password" @bind="@request.Password" />
        <p>@message</p>
        <button @onclick="HandleLogin">Login</button>
    </div>
</div>

@code
{
    string? message;
    LoginRequestDto request = new();

    private async Task HandleLogin()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync($"{ApiService.API_URL}/user/login", request);
            if (!response.IsSuccessStatusCode)
            {
                message = "Login failed.";
            }
            else
            {
                var result = await response.Content.ReadFromJsonAsync<UserTokensDto>();
                if (result is null)
                {
                    message = "Login failed.";
                    return;
                }
                var casp = (CustomAuthenticationStateProvider)asp;
                await casp.SaveToken(result);
                message = result.Claims;
                if (nm.Uri != "/" && nm.Uri != "")
                    nm.NavigateTo(nm.Uri, true);
            }
        }
        catch(Exception ex)
        {
            message = ex.Message;
        }
    }
}